const Pool = require('pg').Pool
const pool = new Pool({
  user: 'my_user',
  host: 'localhost',
  database: 'employee_database',
  password: 'root',
  port: 5432,
});

const getEmployees = (body) => {
  return new Promise(function (resolve, reject) {
    pool.query('SELECT * FROM employee ORDER BY id ASC', (error, results) => {
      if (error) {
        reject(error);
      }
      resolve(results.rows);
    })
  })
}
const addEmployee = (body) => {
  return new Promise(function (resolve, reject) {
    const { name, code, profession, color, city, branch, assigned } = body;
    pool.query(
      'INSERT INTO employee (name, code, profession, color, city, branch, assigned) VALUES ($1, $2, $3, $4, $5, $6, $7) RETURNING *',
      [name, code, profession, color, city, branch, assigned],
      (error, results) => {
        if (error) {
          reject(error);
        }
        resolve(results.rows[0]);
      }
    );
  });
};


const editEmployee = (body) => {
  return new Promise(function (resolve, reject) {
    const { id, name, code, profession, color, city, branch, assigned } = body;
    pool.query(
      'UPDATE employee SET name = $2, code = $3, profession = $4, color = $5, city = $6, branch = $7, assigned = $8 WHERE id = $1 RETURNING *',
      [id, name, code, profession, color, city, branch, assigned],
      (error, results) => {
        if (error) {
          reject(error);
        }
        resolve(results.rows);
      }
    );
  });
};

const deleteEmployee = (id) => {
  return new Promise(function (resolve, reject) {
    //const id = parseInt(request.params.id);
    pool.query('DELETE FROM employee WHERE id = $1', [id], (error, results) => {
      if (error) {
        reject(error);
      }
      resolve(`Employee deleted with ID: ${id}`);
    })
  })
}

module.exports = {
  getEmployees,
  addEmployee,
  editEmployee,
  deleteEmployee,
}